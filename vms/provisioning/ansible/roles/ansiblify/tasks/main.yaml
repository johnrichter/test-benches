---
- name: "Configure basic node settings"
  ansible.builtin.copy:
    src: "{{ role_path }}/files/motd"
    dest: /etc/motd
    mode: "u=rwx,g=rx,o=rx"
    force: true
    backup: false

- name: "Install Ansible dependencies"
  block:
    - name: "Update yum cache"
      ansible.builtin.yum:
        update_cache: true
      when: ansible_pkg_mgr == "yum"
    - name: "Update apt cache"
      ansible.builtin.apt:
        update_cache: true
      when: ansible_pkg_mgr == "apt"
    - name: "Install packages"
      ansible.builtin.package:
        name: "{{ item }}"
      loop:
        - python3
        - openssh-client
        - openssh-server

- name: "Configure Ansible dependencies"
  become: true
  block:
    - name: "Configure SSHD"
      ansible.builtin.copy:
        src: "{{ role_path }}/files/sshd_config"
        dest: /etc/ssh/sshd_config
        mode: "u=rw,g=r,o=r"
        group: root
        owner: root
        force: true
        backup: false
      notify:
        - SSHD | Enable or restart

    - name: "Configure Ansible User and Groups"
      block:
        - name: "Ansible Group"
          block:
            - name: Create Ansible Group
              ansible.builtin.group:
                name: "{{ ansiblify_ansible_group_name }}"
                state: present

            - name: Give group sudo permissions
              ansible.builtin.template:
                src: "{{ role_path }}/templates/sudoers/ansible.j2"
                dest: "/etc/sudoers.d/{{ ansiblify_ansible_group_name }}"
                mode: "u=r,g=r,o="
                owner: root
                group: root
                force: true

        - name: Create Ansible User
          ansible.builtin.import_role:
            name: users
          vars:
            # Hack to force become on imported tasks since import/include don't support become
            ansible_become: true
            users_all:
              - user: "{{ ansiblify_ansible_user_name }}"
                # Encrypted hash (Linux) or plain text password (macOS).
                # https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module
                password: >-
                  {{
                      ansiblify_ansible_user_password if ansible_facts['ansible_os_family'] == 'Darwin' else
                      ansiblify_ansible_user_password | password_hash('sha512', ansiblify_password_salt)
                  }}
                groups:
                  - "{{ ansiblify_ansible_group_name }}"
                is_system_user: false
                home_directory:
                  path: "/home/{{ ansiblify_ansible_user_name }}"
                  create: true
                  move: true
                # See SSH Keygen
                ssh_key:
                  generate: true
                  type: ed25519
                  passphrase: "{{ ansiblify_ansible_user_ssh_key_passphrase }}"
                  filepath: "/home/{{ ansiblify_ansible_user_name }}/.ssh/id_ed25519"
                  comment: "Managed by Ansible"

        - name: "Configure SSH for Ansible user"
          block:
            - name: "Get public key data"
              ansible.builtin.slurp:
                src: "/home/{{ ansiblify_ansible_user_name }}/.ssh/id_ed25519.pub"
              register: ansible_user_public_key

            - name: "Authorize key for ssh login"
              ansible.posix.authorized_key:
                user: "{{ ansiblify_ansible_user_name }}"
                state: present
                # try ['content'] if an error occurs
                key: "{{ ansible_user_public_key.content | b64decode }}"

            - name: "Store private key on Ansible control node"
              ansible.builtin.fetch:
                src: "/home/{{ ansiblify_ansible_user_name }}/.ssh/id_ed25519"
                dest: >-
                  {{
                    '/'.join([
                      ansiblify_local_ssh_key_dir,
                      (ansible_fqdn or inventory_hostname) | replace('.', '-'),
                      machine_ipv4 | replace('.', '-'),
                      '.id_ed25519'
                    ])
                  }}
                fail_on_missing: true
                flat: true

            - name: "Secure SSH assets"
              ansible.builtin.file:
                path: "/home/{{ ansiblify_ansible_user_name }}/.ssh/"
                owner: "{{ ansiblify_ansible_user_name }}"
                group: "{{ ansiblify_ansible_user_name }}"
                mode: "u=rX,g=,o="
                state: directory
